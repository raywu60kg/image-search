"""create table

Revision ID: cdb794c720ae
Revises:
Create Date: 2024-11-15 16:36:02.597167

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy import text

import pgvector
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "cdb794c720ae"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    conn.execute(text("CREATE EXTENSION IF NOT EXISTS vector"))
    op.create_table(
        "image",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("image_base64", sa.Text(), nullable=True),
        sa.Column(
            "image_embedding",
            pgvector.sqlalchemy.vector.VECTOR(dim=512),  # type: ignore
            nullable=False,
        ),
        sa.Column(
            "embedding_model",
            sa.Enum("CLIP", name="embedding_model_enum"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "search_image_record",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text_query", sa.String(), nullable=False),
        sa.Column("result_image_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["result_image_id"],
            ["image.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "feedback",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "feedback", sa.Enum("GOOD", "BAD", name="feedback_enum"), nullable=False
        ),
        sa.Column("search_image_record_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["search_image_record_id"],
            ["search_image_record.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("feedback")
    op.drop_table("search_image_record")
    op.drop_table("image")
    op.execute("DROP TYPE IF EXISTS embedding_model_enum")
    op.execute("DROP TYPE IF EXISTS feedback_enum")
    # ### end Alembic commands ###
